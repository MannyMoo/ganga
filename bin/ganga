#!/usr/bin/env bash

#Get the directory where this script is stored
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
    DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
    SOURCE="$(readlink "$SOURCE")"
    [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

BASEDIR=$( dirname "${DIR}" )

#Add the path to the installed externals
NEW_PYTHONPATH=`PYTHONPATH=$BASEDIR/python $DIR/ganga-external-env.py`
export PYTHONPATH=$NEW_PYTHONPATH${PYTHONPATH:+:}${PYTHONPATH}

#Find a valid version of Python and run with it
#First try the binary named 'python2.7'
#Then check if 'python' is version 2.7
#Finally try 'python27' from Software Collections
if command -v python2.7 >/dev/null 2>&1; then
    python2.7 $DIR/ganga.py $@
elif python -c "import sys; exit(0) if sys.version_info[0:2]==(2,7) else exit(1)"; then
    python $DIR/ganga.py $@
elif scl --list | grep -q python27; then
    scl enable python27 -- python $DIR/ganga.py $@
else
    echo 'Cannot find Python 2.7'
    exit 1
fi
